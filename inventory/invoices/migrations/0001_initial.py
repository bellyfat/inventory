# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-18 00:44
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import inventory.common.model_mixins
import inventory.common.storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('regions', '0001_initial'),
        ('projects', '0001_initial'),
        ('dcolumns', '0006_auto_20160906_1920'),
        ('categories', '0001_initial'),
        ('locations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('suppliers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(help_text='The date and time of creation.', verbose_name='Date Created')),
                ('updated', models.DateTimeField(help_text='The date and time last updated.', verbose_name='Last Updated')),
                ('public_id', models.CharField(blank=True, help_text='Public ID to identify a individual invoice.', max_length=30, unique=True, verbose_name='Public Invoice ID')),
                ('invoice_number', models.CharField(help_text='The number identifying the invoice.', max_length=20, verbose_name='Invoice Number')),
                ('invoice_date', models.DateField(blank=True, help_text='The date of the invoice.', null=True, verbose_name='Invoice Date')),
                ('credit', models.DecimalField(blank=True, decimal_places=4, help_text='Credit amount on the invoice.', max_digits=10, null=True, verbose_name='Credit')),
                ('shipping', models.DecimalField(blank=True, decimal_places=4, help_text='Shipping & Handling amount.', max_digits=10, null=True, verbose_name='Shipping & Handling')),
                ('other', models.DecimalField(blank=True, decimal_places=4, help_text='Miscellaneous amount.', max_digits=10, null=True, verbose_name='Credit')),
                ('tax', models.DecimalField(blank=True, decimal_places=4, help_text='Tax amount.', max_digits=10, null=True, verbose_name='Credit')),
                ('notes', models.TextField(blank=True, help_text='Inventory notes.', max_length=200, null=True, verbose_name='Notes')),
                ('creator', models.ForeignKey(editable=False, help_text='The user who created this record.', on_delete=django.db.models.deletion.CASCADE, related_name='invoices_invoice_creator_related', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('currency', models.ForeignKey(help_text='Unit of currency.', on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='regions.Currency', verbose_name='Currency')),
                ('project', models.ForeignKey(help_text='The project the invoice is part of.', on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='projects.Project', verbose_name='Project')),
                ('supplier', models.ForeignKey(db_index=False, help_text='The Distributor or manufacturer that supplied the item.', on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='suppliers.Supplier', verbose_name='Supplier')),
                ('updater', models.ForeignKey(editable=False, help_text='The last user to update this record.', on_delete=django.db.models.deletion.CASCADE, related_name='invoices_invoice_updater_related', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'verbose_name_plural': 'Invoices',
                'ordering': ('-invoice_date', 'supplier__name'),
                'verbose_name': 'Invoice',
            },
            bases=(inventory.common.model_mixins.ValidateOnSaveMixin, models.Model),
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.CharField(blank=True, help_text='Public ID to identify a individual invoice item.', max_length=30, unique=True, verbose_name='Public Invoice Item ID')),
                ('item_number', models.CharField(help_text='Identifying number of the Supplier.', max_length=50, verbose_name='Invoice Item Number')),
                ('description', models.TextField(blank=True, help_text='Item description.', max_length=200, null=True, verbose_name='Description')),
                ('quantity', models.PositiveIntegerField(default=0, help_text='Number of items.', verbose_name='Quantity')),
                ('unit_price', models.DecimalField(decimal_places=4, help_text='Item price.', max_digits=10, verbose_name='Unit Price')),
                ('process', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text="If 'Yes' an item is created from the invoice.", verbose_name='Create Item')),
                ('invoice', models.ForeignKey(help_text="This item's invoice.", on_delete=django.db.models.deletion.CASCADE, related_name='invoice_items', to='invoices.Invoice', verbose_name='Invoice')),
            ],
            options={
                'verbose_name_plural': 'Invoice Items',
                'ordering': ('item_number',),
                'verbose_name': 'Invoice Item',
            },
            bases=(inventory.common.model_mixins.ValidateOnSaveMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('collectionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dcolumns.CollectionBase')),
                ('public_id', models.CharField(blank=True, help_text='Public ID to identify a individual item.', max_length=30, unique=True, verbose_name='Public Item ID')),
                ('sku', models.CharField(blank=True, help_text='Internal part number.', max_length=20, verbose_name='Stock Keeping Unit (SKU)')),
                ('photo', models.ImageField(blank=True, help_text='Picture of item.', null=True, storage=inventory.common.storage.InventoryFileStorage(), upload_to=inventory.common.storage.create_file_path, verbose_name='Item Photo')),
                ('item_number', models.CharField(blank=True, help_text='Common item number.', max_length=50, null=True, verbose_name='Item Number')),
                ('item_number_mfg', models.CharField(blank=True, help_text='Manufacturer item number.', max_length=50, null=True, verbose_name='MFG Item Number')),
                ('description', models.TextField(blank=True, help_text='Item description.', max_length=1000, null=True, verbose_name='Description')),
                ('quantity', models.PositiveIntegerField(default=0, help_text='Number of items remaining.', verbose_name='Quantity')),
                ('purge', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='If the item will be purged from the system.', verbose_name='Purge')),
                ('categories', models.ManyToManyField(blank=True, help_text='Item categories.', related_name='items', to='categories.Category', verbose_name='Categories')),
                ('location_codes', models.ManyToManyField(blank=True, help_text='Code for the physical location of the item.', related_name='items', to='locations.LocationCode', verbose_name='Location Codes')),
                ('manufacturer', models.ForeignKey(blank=True, help_text='The manufacturer that produced the item.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manufacturers_items', to='suppliers.Supplier', verbose_name='Manufacturer')),
                ('project', models.ForeignKey(db_index=False, help_text='The project the item is part of.', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='projects.Project', verbose_name='Project')),
                ('shared_projects', models.ManyToManyField(help_text='Project(s) this item is shared with.', related_name='shared_items', to='projects.Project', verbose_name='Shared with Project')),
            ],
            options={
                'verbose_name_plural': 'Items',
                'ordering': ('project__name', 'sku'),
                'verbose_name': 'Item',
            },
            bases=('dcolumns.collectionbase', inventory.common.model_mixins.ValidateOnSaveMixin, models.Model),
        ),
        migrations.AddField(
            model_name='invoiceitem',
            name='item',
            field=models.ForeignKey(blank=True, help_text='The inventory item.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_items', to='invoices.Item', verbose_name='Item'),
        ),
        migrations.AlterUniqueTogether(
            name='item',
            unique_together=set([('project', 'sku')]),
        ),
        migrations.AlterUniqueTogether(
            name='invoice',
            unique_together=set([('supplier', 'invoice_number')]),
        ),
    ]
