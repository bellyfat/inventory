# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-18 00:44
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import inventory.common.model_mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LocationCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(help_text='The date and time of creation.', verbose_name='Date Created')),
                ('updated', models.DateTimeField(help_text='The date and time last updated.', verbose_name='Last Updated')),
                ('public_id', models.CharField(blank=True, help_text='Public ID to identify an individual project.', max_length=30, unique=True, verbose_name='Public Location Code ID')),
                ('segment', models.CharField(help_text='See the LocationFormat.description for the format used.', max_length=250, verbose_name='Segment')),
                ('path', models.CharField(editable=False, help_text='The full hierarchical path of this segment.', max_length=1000, verbose_name='Path')),
                ('level', models.SmallIntegerField(editable=False, help_text='The location in the hierarchy of this segment.', verbose_name='Level')),
                ('creator', models.ForeignKey(editable=False, help_text='The user who created this record.', on_delete=django.db.models.deletion.CASCADE, related_name='locations_locationcode_creator_related', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name_plural': 'Location Codes',
                'ordering': ('path',),
                'verbose_name': 'Location Code',
            },
            bases=(inventory.common.model_mixins.ValidateOnSaveMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LocationFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(help_text='The date and time of creation.', verbose_name='Date Created')),
                ('updated', models.DateTimeField(help_text='The date and time last updated.', verbose_name='Last Updated')),
                ('public_id', models.CharField(blank=True, help_text='Public ID to identify an individual project.', max_length=30, unique=True, verbose_name='Public Location Format ID')),
                ('segment_length', models.PositiveIntegerField(default=0, editable=False, help_text='The length of this character definition.', verbose_name='Segment Length')),
                ('char_definition', models.CharField(db_index=True, help_text="Determine the character position definition where alpha='\\a', numeric='\\d', punctuation='\\p', or any hard coded character. ex. \\a\\d\\d\\d could be B001 or \\a@\\d\\d could be D@99.", max_length=250, verbose_name='Format')),
                ('segment_order', models.PositiveIntegerField(default=0, help_text='A number indicating the order that this segment will appear in the location code. Numbers should start with 0 (Can be edited in the list view also).', verbose_name='Segment Order')),
                ('description', models.CharField(blank=True, help_text='Enter a description of the category segments.', max_length=1000, null=True, verbose_name='Description')),
                ('creator', models.ForeignKey(editable=False, help_text='The user who created this record.', on_delete=django.db.models.deletion.CASCADE, related_name='locations_locationformat_creator_related', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name_plural': 'Location Formats',
                'ordering': ('segment_order',),
                'verbose_name': 'Location Format',
            },
            bases=(inventory.common.model_mixins.ValidateOnSaveMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LocationSetName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(help_text='The date and time of creation.', verbose_name='Date Created')),
                ('updated', models.DateTimeField(help_text='The date and time last updated.', verbose_name='Last Updated')),
                ('public_id', models.CharField(blank=True, help_text='Public ID to identify an individual project.', max_length=30, unique=True, verbose_name='Public Location Set Name ID')),
                ('name', models.CharField(help_text='Enter a name for this series of formats.', max_length=100, verbose_name='Name')),
                ('description', models.CharField(blank=True, help_text='Define what the codes derived from this format are used for.', max_length=1000, null=True, verbose_name='Description')),
                ('shared', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='If you would like others to make a copy of your formats.', verbose_name='Shared')),
                ('separator', models.CharField(default=':', help_text='The separator to use between segments. Defaults to a colon (:). Max length is three characters.', max_length=3, verbose_name='Segment Separator')),
                ('creator', models.ForeignKey(editable=False, help_text='The user who created this record.', on_delete=django.db.models.deletion.CASCADE, related_name='locations_locationsetname_creator_related', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('project', models.ForeignKey(db_index=False, help_text='The project that owns this record.', on_delete=django.db.models.deletion.CASCADE, related_name='location_set_names', to='projects.Project', verbose_name='Project')),
                ('updater', models.ForeignKey(editable=False, help_text='The last user to update this record.', on_delete=django.db.models.deletion.CASCADE, related_name='locations_locationsetname_updater_related', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'verbose_name_plural': 'Location Set Names',
                'ordering': ('project__name',),
                'verbose_name': 'Location Set Name',
            },
            bases=(inventory.common.model_mixins.ValidateOnSaveMixin, models.Model),
        ),
        migrations.AddField(
            model_name='locationformat',
            name='location_set_name',
            field=models.ForeignKey(db_index=False, help_text='The location set name relative to this location format.', on_delete=django.db.models.deletion.CASCADE, related_name='location_formats', to='locations.LocationSetName', verbose_name='Location Set Name'),
        ),
        migrations.AddField(
            model_name='locationformat',
            name='updater',
            field=models.ForeignKey(editable=False, help_text='The last user to update this record.', on_delete=django.db.models.deletion.CASCADE, related_name='locations_locationformat_updater_related', to=settings.AUTH_USER_MODEL, verbose_name='Updater'),
        ),
        migrations.AddField(
            model_name='locationcode',
            name='location_format',
            field=models.ForeignKey(db_index=False, help_text='Choose the format that this segment will be based on.', on_delete=django.db.models.deletion.CASCADE, related_name='location_codes', to='locations.LocationFormat', verbose_name='Format'),
        ),
        migrations.AddField(
            model_name='locationcode',
            name='parent',
            field=models.ForeignKey(blank=True, db_index=False, default=None, help_text='The parent of this segment.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='locations.LocationCode', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='locationcode',
            name='updater',
            field=models.ForeignKey(editable=False, help_text='The last user to update this record.', on_delete=django.db.models.deletion.CASCADE, related_name='locations_locationcode_updater_related', to=settings.AUTH_USER_MODEL, verbose_name='Updater'),
        ),
        migrations.AlterUniqueTogether(
            name='locationsetname',
            unique_together=set([('project', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='locationformat',
            unique_together=set([('location_set_name', 'char_definition')]),
        ),
        migrations.AlterUniqueTogether(
            name='locationcode',
            unique_together=set([('location_format', 'parent', 'segment')]),
        ),
    ]
